{% extends 'admin/base.html.twig' %}

{% block title %}Modifier l'offre | {{ parent() }}{% endblock %}

{% block breadcrumb %}
    <li class="breadcrumb-item"><a href="{{ path('app_quote_dashboard') }}">Gestion des devis</a></li>
    <li class="breadcrumb-item"><a href="{{ path('app_quote_view', {'id': offer.quote.id}) }}">Détails du devis #{{ offer.quote.id }}</a></li>
    <li class="breadcrumb-item active" aria-current="page">Modifier l'offre #{{ offer.id }}</li>
{% endblock %}

{# Filtre personnalisé pour rendre les liens cliquables #}
{% if false %}
    {# Cette approche ne fonctionne pas dans Twig standard, à implémenter avec une extension Twig #}
{% endif %}

{% block body %}
<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Modifier l'offre #{{ offer.id }}</h1>
        <a href="{{ path('app_quote_view', {'id': offer.quote.id}) }}" class="btn btn-secondary">
            <i data-lucide="arrow-left" class="me-2"></i> Retour au devis
        </a>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="admin-card mb-4">
                <div class="admin-card-header">
                    <h5 class="mb-0">Informations client</h5>
                </div>
                <div class="admin-card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="flex-shrink-0">
                            <i data-lucide="user" class="icon-lg text-primary"></i>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-0">{{ offer.quote.fullName }}</h6>
                            {% if offer.quote.company %}
                                <p class="text-muted mb-0">{{ offer.quote.company }}</p>
                            {% endif %}
                        </div>
                    </div>
                    <hr>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <a href="mailto:{{ offer.quote.email }}" class="btn btn-sm btn-light me-2" data-bs-toggle="tooltip" title="Email: {{ offer.quote.email }}">
                                <i data-lucide="mail" class="icon-sm"></i>
                            </a>
                            <a href="tel:{{ offer.quote.phone }}" class="btn btn-sm btn-light" data-bs-toggle="tooltip" title="Téléphone: {{ offer.quote.phone }}">
                                <i data-lucide="phone" class="icon-sm"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="admin-card mb-4">
                <div class="admin-card-header">
                    <h5 class="mb-0">Produits demandés</h5>
                </div>
                <div class="admin-card-body">
                    <ul class="list-group">
                        {% for item in offer.quote.items %}
                            <li class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <span class="badge bg-secondary me-2">#{{ loop.index }}</span>
                                        <strong>{{ item.productType }}</strong>
                                        {% if item.quantity %}
                                            <span class="badge bg-primary ms-2">{{ item.quantity }} pcs</span>
                                        {% endif %}
                                    </div>
                                    <div class="d-flex">
                                        {% if item.budget %}
                                            <span class="me-2" title="Budget: {{ item.budget }} €">
                                                <i data-lucide="wallet" class="icon-sm text-success"></i>
                                            </span>
                                        {% endif %}
                                        {% if item.description %}
                                            <a href="#" class="me-2 toggle-description" data-target="description-{{ loop.index }}">
                                                <i data-lucide="file-text" class="icon-sm text-primary"></i>
                                            </a>
                                        {% endif %}
                                        {% if item.photoFilename %}
                                            <a href="#" class="me-2" data-bs-toggle="modal" data-bs-target="#imageModal{{ loop.index }}">
                                                <i data-lucide="image" class="icon-sm text-primary"></i>
                                            </a>
                                        {% else %}
                                            <span class="me-2" title="Pas d'image disponible">
                                                <i data-lucide="image-off" class="icon-sm text-muted"></i>
                                            </span>
                                        {% endif %}
                                    </div>
                                </div>
                                <div id="description-{{ loop.index }}" class="mt-2 description-content" style="display: none;">
                                    <p class="text-muted small mb-0" style="word-break: break-word; overflow-wrap: break-word;">{{ item.description|nl2br }}</p>
                                </div>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="admin-card mb-4">
                <div class="admin-card-header">
                    <h5 class="mb-0">Détails de l'offre</h5>
                </div>
                <div class="admin-card-body">
                    {{ form_start(form) }}
                    <div class="row">
                        <div class="col-md-4">
                            {{ form_row(form.title) }}
                        </div>
                        <div class="col-md-4">
                            {{ form_row(form.status) }}
                        </div>
                        <div class="col-md-4">
                            {{ form_row(form.rmbMgaExchangeRate) }}
                        </div>
                    </div>
                    
                    {{ form_row(form.description) }}

                    <div class="admin-card mt-4 mb-4">
                        <div class="admin-card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Propositions de produits</h5>
                            <div>
                                <button type="button" class="btn btn-success rounded-circle p-0" id="add-product-proposal" style="width: 24px; height: 24px; display: flex; align-items: center; justify-content: center;">
                                    <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="admin-card-body">
                        <!-- Conteneur pour les propositions de produits -->
                        <div class="product-proposals-container" data-prototype="{{ form_widget(form.productProposals.vars.prototype)|e('html_attr') }}" data-index="{{ form.productProposals|length }}">
                            {% if form.productProposals|length > 0 %}
                                {% for productProposalForm in form.productProposals %}
                                    <div class="product-proposal-item admin-card mb-3">
                                        <div class="admin-card-header bg-light d-flex justify-content-between">
                                            <h6 class="mb-0">Proposition #{{ loop.index }}</h6>
                                            <button type="button" class="btn btn-sm btn-danger remove-product-proposal">
                                                <i data-lucide="trash-2"></i> Supprimer
                                            </button>
                                        </div>
                                        <div class="admin-card-body">
                                            {{ form_widget(productProposalForm) }}
                                        </div>
                                    </div>
                                {% endfor %}
                            {% else %}
                                <div class="alert alert-info">
                                    Aucune proposition de produit ajoutée. Cliquez sur le bouton + pour commencer.
                                </div>
                            {% endif %}
                        </div>
                    </div>

                    <div class="admin-card mb-4">
                        <div class="admin-card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">Options d'expédition</h5>
                            <button type="button" class="btn btn-success rounded-circle p-0" id="add-shipping-option" style="width: 24px; height: 24px; display: flex; align-items: center; justify-content: center;">
                                <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                            </button>
                        </div>
                        <div class="admin-card-body">
                            {% if quote.shippingMethod|length > 0 %}
                                <div class="alert alert-info mb-3">
                                    <i data-lucide="info" class="me-1" style="width: 16px; height: 16px;"></i>
                                    Le client a sélectionné les méthodes d'envoi suivantes : 
                                    <strong>
                                        {% set methodLabels = {
                                            'maritime': 'Maritime',
                                            'aerien_express': 'Aérien Express',
                                            'aerien_normal': 'Aérien Standard'
                                        } %}
                                        {% for method in quote.shippingMethod %}
                                            {{ methodLabels[method]|default(method) }}{% if not loop.last %}, {% endif %}
                                        {% endfor %}
                                    </strong>
                                    <br>
                                    <small>Les options d'expédition ont été pré-remplies selon ces choix. Vous pouvez ajuster les prix et détails si nécessaire.</small>
                                </div>
                            {% endif %}
                            
                            <!-- Conteneur pour les options d'expédition -->
                            <div class="shipping-options-container" data-prototype="{{ form_widget(form.shippingOptions.vars.prototype)|e('html_attr') }}" data-index="{{ form.shippingOptions|length }}">
                                {% if form.shippingOptions|length > 0 %}
                                    {% for shippingOptionForm in form.shippingOptions %}
                                        <div class="shipping-option-item admin-card mb-3">
                                            <div class="admin-card-header bg-light d-flex justify-content-between">
                                                <h6 class="mb-0">Option d'expédition #{{ loop.index }}</h6>
                                                <button type="button" class="btn btn-sm btn-danger remove-shipping-option">
                                                    <i data-lucide="trash-2"></i> Supprimer
                                                </button>
                                            </div>
                                            <div class="admin-card-body">
                                                {{ form_widget(shippingOptionForm) }}
                                            </div>
                                        </div>
                                    {% endfor %}
                                {% else %}
                                    <div class="alert alert-info">
                                        Aucune option d'expédition ajoutée. Cliquez sur le bouton + pour commencer.
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn btn-primary">
                            <i data-lucide="save" class="me-2"></i> Enregistrer les modifications
                        </button>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

{% for item in offer.quote.items %}
    {% if item.photoFilename %}
        <div class="modal fade" id="imageModal{{ loop.index }}" tabindex="-1" aria-labelledby="imageModalLabel{{ loop.index }}" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="imageModalLabel{{ loop.index }}">{{ item.productType }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body text-center">
                        <img src="{{ asset('uploads/quote_photos/' ~ item.photoFilename) }}" class="img-fluid" alt="{{ item.productType }}">
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
{% endfor %}

{% for proposal in offer.productProposals %}
    {% if proposal.images|length > 0 %}
        {% for image in proposal.images %}
            <div class="modal fade" id="proposalImageModal{{ proposal.id }}_{{ loop.index }}" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Image de proposition</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body text-center">
                            <img src="{{ asset('uploads/product_proposals/' ~ image) }}" class="img-fluid" alt="Image de proposition">
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    {% endif %}
{% endfor %}
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="{{ asset('js/exchange-rate.js') }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialisation des tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
        
        // Fonction pour récupérer le taux de change RMB/MGA en temps réel
        function fetchExchangeRate() {
            const rmbRateField = document.querySelector('input[id$="rmbMgaExchangeRate"]');
            if (rmbRateField && !rmbRateField.value) {
                // Afficher un indicateur de chargement
                rmbRateField.setAttribute('placeholder', 'Chargement du taux...');
                rmbRateField.disabled = true;
                
                // Faire une requête à notre API
                fetch('{{ path('app_exchange_rate_api') }}')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success && data.rate) {
                            rmbRateField.value = data.rate;
                            // Ajouter un petit texte pour indiquer quand le taux a été récupéré et les infos de mise à jour
                            const helpText = rmbRateField.closest('.form-group').querySelector('.form-text');
                            if (helpText) {
                                let infoHtml = '<br><small class="text-success">Taux récupéré le ' + data.timestamp + '</small>';
                                if (data.last_update) {
                                    infoHtml += '<br><small class="text-muted">Dernière mise à jour: ' + data.last_update + '</small>';
                                }
                                if (data.next_update) {
                                    infoHtml += '<br><small class="text-muted">Prochaine mise à jour: ' + data.next_update + '</small>';
                                }
                                helpText.innerHTML += infoHtml;
                            }
                        } else {
                            rmbRateField.setAttribute('placeholder', 'Erreur lors de la récupération du taux');
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération du taux de change:', error);
                        rmbRateField.setAttribute('placeholder', 'Erreur lors de la récupération du taux');
                    })
                    .finally(() => {
                        rmbRateField.disabled = false;
                    });
            }
        }
        
        // Si le champ est vide, récupérer le taux actuel
        const rmbRateField = document.querySelector('input[id$="rmbMgaExchangeRate"]');
        if (rmbRateField && !rmbRateField.value) {
            fetchExchangeRate();
        }
        
        // Ajouter un bouton de rafraîchissement à côté du champ
        if (rmbRateField) {
            const refreshButton = document.createElement('button');
            refreshButton.type = 'button';
            refreshButton.className = 'btn btn-sm btn-outline-primary ms-2';
            refreshButton.innerHTML = '<i data-lucide="refresh-cw" style="width: 16px; height: 16px;"></i> Actualiser';
            refreshButton.addEventListener('click', function(e) {
                e.preventDefault();
                rmbRateField.value = '';
                fetchExchangeRate();
            });
            
            const formGroup = rmbRateField.closest('.form-group');
            const inputWrapper = rmbRateField.parentNode;
            
            // Créer un conteneur flex pour aligner le champ et le bouton
            const flexContainer = document.createElement('div');
            flexContainer.className = 'd-flex align-items-center';
            
            // Retirer le champ du DOM et l'ajouter au conteneur flex
            inputWrapper.removeChild(rmbRateField);
            flexContainer.appendChild(rmbRateField);
            flexContainer.appendChild(refreshButton);
            
            // Ajouter le conteneur flex au formulaire
            inputWrapper.appendChild(flexContainer);
            
            // Initialiser les icônes Lucide
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
        }

        // Remplacer toutes les options des selects quoteItem par une version avec numéro de badge
        function addNumbersToSelect(select) {
            // Création d'un tableau associatif des noms de produits et leurs numéros
            const productsMap = {};
            $('.list-group-item').each(function(i) {
                const badge = $(this).find('.badge.bg-secondary');
                const badgeNumber = badge.length ? badge.text() : '#' + (i + 1);
                const productName = $(this).find('strong').text().trim();
                productsMap[productName] = badgeNumber;
            });
            
            // Remplacer toutes les options sauf la première
            $(select).find('option').each(function(index) {
                if (index > 0 && $(this).text()) { // Ignorer l'option "Sélectionnez un produit"
                    const productName = $(this).text().trim();
                    if (productsMap[productName]) {
                        $(this).text(productsMap[productName] + ' - ' + productName);
                    }
                }
            });
        }
        
        // Appliquer aux selects existants
        $('select[id$="_quoteItem"]').each(function() {
            addNumbersToSelect(this);
        });
        
        // Surveiller les nouveaux selects ajoutés au DOM
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length) {
                    mutation.addedNodes.forEach(function(node) {
                        if (node.nodeType === 1) { // ELEMENT_NODE
                            $(node).find('select[id$="_quoteItem"]').each(function() {
                                addNumbersToSelect(this);
                            });
                        }
                    });
                }
            });
        });
        
        observer.observe(document.body, { childList: true, subtree: true });
        
        // Rendre les liens cliquables dans les descriptions
        document.querySelectorAll('.description-content p').forEach(function(paragraph) {
            const content = paragraph.innerHTML;
            const linkedContent = content.replace(
                /(https?:\/\/[^\s<]+)/g, 
                '<a href="$1" target="_blank" class="text-primary">$1</a>'
            );
            paragraph.innerHTML = linkedContent;
        });
        
        // Code pour les propositions de produits
        let $productProposalsContainer = $('.product-proposals-container');
        let productProposalIndex = $productProposalsContainer.data('index');
        
        // Événements pour afficher/masquer les descriptions
        $('.toggle-description').on('click', function(e) {
            e.preventDefault();
            const targetId = $(this).data('target');
            $('#' + targetId).toggle();
        });
        
        // Génération automatique des propositions au chargement de la page
        // Vérifier s'il n'y a pas déjà des propositions
        if ($('.product-proposal-item', $productProposalsContainer).length === 0 || 
            ($productProposalsContainer.children().length === 1 && $productProposalsContainer.find('.alert').length > 0)) {
            
            // Récupérer tous les produits demandés
            const $quoteItems = $('.list-group-item');
            
            // Générer une proposition pour chaque produit
            if ($quoteItems.length > 0) {
                // Vider les alertes si présentes
                if ($productProposalsContainer.find('.alert').length > 0) {
                    $productProposalsContainer.empty();
                }
                
                $quoteItems.each(function(index) {
                    const productName = $(this).find('strong').text();
                    const productId = index; // Utiliser l'index comme ID temporaire
                    
                    // Créer une nouvelle proposition
                    addProductProposal(productId, productName);
                });
            }
        }
        
        // Fonction pour ajouter une proposition de produit
        function addProductProposal(productId = null, productName = null) {
            let prototype = $productProposalsContainer.data('prototype');
            let newForm = prototype.replace(/__name__/g, productProposalIndex);
            
            // Titre personnalisé en fonction du produit sélectionné
            const titleText = productName ? 'Proposition #' + (productProposalIndex + 1) + ': ' + productName : 'Proposition #' + (productProposalIndex + 1);
            
            let $newFormWrapper = $('<div class="product-proposal-item admin-card mb-3"></div>');
            let $header = $('<div class="admin-card-header bg-light d-flex justify-content-between"></div>');
            let $body = $('<div class="admin-card-body"></div>');
            
            $header.append('<h6 class="mb-0">' + titleText + '</h6>');
            $header.append('<button type="button" class="btn btn-sm btn-danger remove-product-proposal"><i data-lucide="trash-2"></i> Supprimer</button>');
            
            $body.append(newForm);
            $newFormWrapper.append($header);
            $newFormWrapper.append($body);
            
            $('.alert', $productProposalsContainer).remove();
            $productProposalsContainer.append($newFormWrapper);
            
            // Si un produit a été spécifié, sélectionner automatiquement le produit dans le select
            if (productId !== null) {
                setTimeout(function() {
                    let $selects = $('select', $newFormWrapper);
                    let $quoteItemSelect = $selects.filter(function() {
                        return $(this).attr('name').includes('[quoteItem]');
                    });
                    
                    if ($quoteItemSelect.length > 0) {
                        // Trouver l'option correspondant au produit (maintenant avec #N - préfixe)
                        $quoteItemSelect.find('option').each(function() {
                            // Chercher le texte original du produit dans l'option (après le préfixe #N - )
                            if ($(this).text().includes(productName) && $(this).val()) {
                                $(this).prop('selected', true);
                                return false; // Break the loop
                            }
                        });
                    }
                    
                    // Réinitialiser Lucide icons pour les nouveaux éléments
                    lucide.createIcons();
                }, 0);
            } else {
                // Réinitialiser Lucide icons pour les nouveaux éléments
                lucide.createIcons();
            }
            
            productProposalIndex++;
            $productProposalsContainer.data('index', productProposalIndex);
            
            // Ajouter événement de suppression
            $('.remove-product-proposal', $newFormWrapper).click(function() {
                $(this).closest('.product-proposal-item').remove();
                
                if ($('.product-proposal-item', $productProposalsContainer).length === 0) {
                    $productProposalsContainer.append('<div class="alert alert-info">Aucune proposition de produit ajoutée. Cliquez sur le bouton + pour commencer.</div>');
                }
            });
        }
        
        $('#add-product-proposal').click(function() {
            addProductProposal();
        });
        
        $(document).on('click', '.remove-product-proposal', function() {
            $(this).closest('.product-proposal-item').remove();
            
            if ($('.product-proposal-item', $productProposalsContainer).length === 0) {
                $productProposalsContainer.append('<div class="alert alert-info">Aucune proposition de produit ajoutée. Cliquez sur le bouton + pour commencer.</div>');
            }
        });
        
        // Code pour les options d'expédition
        let $shippingOptionsContainer = $('.shipping-options-container');
        let shippingOptionIndex = $shippingOptionsContainer.data('index');
        
        $('#add-shipping-option').click(function() {
            let prototype = $shippingOptionsContainer.data('prototype');
            let newForm = prototype.replace(/__name__/g, shippingOptionIndex);
            
            let $newFormWrapper = $('<div class="shipping-option-item admin-card mb-3"></div>');
            let $header = $('<div class="admin-card-header bg-light d-flex justify-content-between"></div>');
            let $body = $('<div class="admin-card-body"></div>');
            
            $header.append('<h6 class="mb-0">Option d\'expédition #' + (shippingOptionIndex + 1) + '</h6>');
            $header.append('<button type="button" class="btn btn-sm btn-danger remove-shipping-option"><i data-lucide="trash-2"></i> Supprimer</button>');
            
            $body.append(newForm);
            $newFormWrapper.append($header);
            $newFormWrapper.append($body);
            
            $('.alert', $shippingOptionsContainer).remove();
            $shippingOptionsContainer.append($newFormWrapper);
            
            shippingOptionIndex++;
            $shippingOptionsContainer.data('index', shippingOptionIndex);
            
            // Réinitialiser Lucide icons pour les nouveaux éléments
            lucide.createIcons();
            
            // Ajouter événement de suppression
            $('.remove-shipping-option', $newFormWrapper).click(function() {
                $(this).closest('.shipping-option-item').remove();
                
                if ($('.shipping-option-item', $shippingOptionsContainer).length === 0) {
                    $shippingOptionsContainer.append('<div class="alert alert-info">Aucune option d\'expédition ajoutée. Cliquez sur le bouton + pour commencer.</div>');
                }
            });
        });
        
        $(document).on('click', '.remove-shipping-option', function() {
            $(this).closest('.shipping-option-item').remove();
            
            if ($('.shipping-option-item', $shippingOptionsContainer).length === 0) {
                $shippingOptionsContainer.append('<div class="alert alert-info">Aucune option d\'expédition ajoutée. Cliquez sur le bouton + pour commencer.</div>');
            }
        });
    });
</script>
{% endblock %} 